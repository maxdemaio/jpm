From b73be625dbd19cc4cc72cbf00f7944ca3efd9074 Mon Sep 17 00:00:00 2001
From: Maxwell DeMaio <maxwell.demaio@gmail.com>
Date: Wed, 3 Feb 2021 22:22:15 -0500
Subject: [PATCH] Create Patch File

---
 __pycache__/client3.cpython-39.pyc | Bin 0 -> 1149 bytes
 client3.py                         |  16 ++++++++---
 client_test.py                     |  42 +++++++++++++++++++++++++++--
 3 files changed, 53 insertions(+), 5 deletions(-)
 create mode 100644 __pycache__/client3.cpython-39.pyc

diff --git a/__pycache__/client3.cpython-39.pyc b/__pycache__/client3.cpython-39.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..3ed1594d3d9db260fad09de6ab9d9ed86e90ffa0
GIT binary patch
literal 1149
zcmYjQ&2Aev5GHrItCcM|YW%DE!WIY`6;<pamq19<v~p6QXbdMo4kc7<*WyTCd$lW*
zRADRfNqrFc*h62Vhdu(YJ>}k0Po1S~BP8aRv%{H>vq`<aLU66Z?yrBM_D^YiysBtC
zN78>IlSI;t2<oIKJSTnOJIMr-o(QBbLdj(CI}sHb$_mN|sxmtB)L*ays}RoVoF0&0
zE<_FdMIGqr+TtDriw3X-yC&E4nl3&mrMRCGu@3h!c3*5j1vcii$Hb=C65C=2c3>Sg
zpAu-wDr~|QY{SlgZIL;p<op7?D-glDTx}BMwI-Q+H)lUd`j)inAFv;CIQ{Izm~m%s
zFDv><c2a25d9wdxfA4$(>hjxEe)Ik+{g)EbN4i@9Y7D81q@N?3AudgFMNO%BO(K1~
zk6wAsW_Pwf^Je}wk-;vxVl!G=Gd5sYO*rlFBUQ*rA9#{wyclqE0z3zhAo*`eHUZ5|
z!H1B8N(=^ZnV4i;q`BcX(5C30*@`K~@o_3`Fji?FmUg1gK6qGSi`rn26^UsDHaMRY
z22|;`Rs0}c##b?Rsj9NOKZsgI@!w&$(|e~u>E0;0kkC5-eTFynUR`zzndZZnX$HD?
zI&O~&HB9o}k4LY%Z3F$2w!wt$uiN9x$Gv`*LT(;E8eiJl5X=D<f8>hC8?>81KcWrV
z@M=`m(bq4FyIrMTlEZrgl^K;3=cy*Ww}|+R?h?e%pMK7N0K*ZVv?vjDUBwAca(Sa4
zb5*|Mp=+$=iONmLt#a%RmaK+>Ho{upl=;3yONYn^i#$fvnmdi-QIh6yJpJNziKyfc
zG*1kFh?sUB=&v~T@1(m1wbnFp*)Y!f-+kY;{=tivtxv_;L}gie{73=Loi-v|+LoDg
z1cIIFA{U{;K8leDUcY<s=4VR}9Zq+J<jDx)*s>HK)&>|m1WRKZ;FC)&Dz}*{n7J53
zZo@&LMv1XZK_YGFCPLfLRjO5l?Ya3-<^QkB2XZsvMk_ZT!BmcjT4MEdgae$xvrTkq
ajx3^X`^;xvw1V4jP#!S!HoS;#`Tqmg3M2FY

literal 0
HcmV?d00001

diff --git a/client3.py b/client3.py
index f1771c3..96c7ac3 100644
--- a/client3.py
+++ b/client3.py
@@ -35,14 +35,18 @@ def getDataPoint(quote):
 	stock = quote['stock']
 	bid_price = float(quote['top_bid']['price'])
 	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
+	# Compute stock price
+	price = (bid_price + ask_price)/2
 	return stock, bid_price, ask_price, price
 
 def getRatio(price_a, price_b):
 	""" Get ratio of price_a and price_b """
 	""" ------------- Update this function ------------- """
 	""" Also create some unit tests for this function in client_test.py """
-	return 1
+	if (price_b == 0):
+		# Make sure denominator is not 0
+		return
+	return price_a/price_b
 
 # Main
 if __name__ == "__main__":
@@ -52,8 +56,14 @@ if __name__ == "__main__":
 		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
 		""" ----------- Update to get the ratio --------------- """
+		# Create empty dictionary for our prices
+		# This will update for each pair of ABC/DEF
+		prices = {}
 		for quote in quotes:
 			stock, bid_price, ask_price, price = getDataPoint(quote)
+			# Assign key value pair for ABC/DEF
+			prices[stock] = price
 			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-		print ("Ratio %s" % getRatio(price, price))
+		# Compute ratio between the two stocks
+		print ("Ratio %s" % getRatio(prices["ABC"], prices["DEF"]))
diff --git a/client_test.py b/client_test.py
index af2bf26..2a1398c 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,6 @@
 import unittest
-from client3 import getDataPoint
+from client3 import getDataPoint, getRatio
+
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,6 +9,10 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    # Check if getDataPoint function returns the correct tuple where top_ask > top_bid
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], 
+        quote['top_ask']['price'], (quote['top_ask']['price'] + quote['top_bid']['price'])/2))
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,10 +20,43 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
+    # Check if getDataPoint function returns the correct tuple where top_ask > top_bid
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'],
+        quote['top_ask']['price'], (quote['top_ask']['price'] + quote['top_bid']['price'])/2))
 
   """ ------------ Add more unit tests ------------ """
+  def test_getRatio_calculateStockBZero(self):
+    quotes = [
+        {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453',
+         'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+        {'top_ask': {'price': 0, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+            'top_bid': {'price': 0, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    # getRatio when price B is zero
+    prices = {}
+    for quote in quotes:
+      price = getDataPoint(quote)[3]
+      stock = getDataPoint(quote)[0]
+      # Assign key value pair for ABC/DEF
+      prices[stock] = price
+    self.assertEqual(getRatio(prices["ABC"], prices["DEF"]), None)
 
+  def test_getRatio_calculateStockAZero(self):
+    quotes = [
+        {'top_ask': {'price': 0, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453',
+          'top_bid': {'price': 0, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+        {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+            'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    # getRatio when price A is zero
+    prices = {}
+    for quote in quotes:
+      price = getDataPoint(quote)[3]
+      stock = getDataPoint(quote)[0]
+      # Assign key value pair for ABC/DEF
+      prices[stock] = price
+    self.assertEqual(getRatio(prices["ABC"], prices["DEF"]), 0)
 
 
 if __name__ == '__main__':
-- 
2.29.0.windows.1

